<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Feuil1 (Tableau Table 1)' inline='true' name='federated.1vnbk551ilol5616g5x1j082mx1k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.0x3p8r60gxk0ki179hquu0ojsibz'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Aigle Chauve/Documents/Professionnel/Software Engineering/Data Analysis/Tutoriels Tableau/Tableau-Project-Covid-Data/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0x3p8r60gxk0ki179hquu0ojsibz' name='Feuil1' table='[Feuil1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_deaths' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0x3p8r60gxk0ki179hquu0ojsibz' name='Feuil1' table='[Feuil1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_deaths' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_B4EF1B636EDB474895DD025D39F2949C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_B4EF1B636EDB474895DD025D39F2949C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_B4EF1B636EDB474895DD025D39F2949C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Feuil1' datatype='table' name='[__tableau_internal_object_id__].[Feuil1_B4EF1B636EDB474895DD025D39F2949C]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Feuil1' id='Feuil1_B4EF1B636EDB474895DD025D39F2949C'>
            <properties context=''>
              <relation connection='excel-direct.0x3p8r60gxk0ki179hquu0ojsibz' name='Feuil1' table='[Feuil1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_deaths' ordinal='0' />
                  <column datatype='integer' name='total_cases' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Feuil1 (Tableau Table 2)' inline='true' name='federated.0bp7ymf0hywcdi12d01ti12k2do0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1gzpi871mf9fd51d5350s1pzpc14'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Aigle Chauve/Documents/Professionnel/Software Engineering/Data Analysis/Tutoriels Tableau/Tableau-Project-Covid-Data/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1gzpi871mf9fd51d5350s1pzpc14' name='Feuil1' table='[Feuil1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1gzpi871mf9fd51d5350s1pzpc14' name='Feuil1' table='[Feuil1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_F67F0D0094C84BB9BCDF4003F809DD29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_F67F0D0094C84BB9BCDF4003F809DD29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Feuil1' datatype='table' name='[__tableau_internal_object_id__].[Feuil1_F67F0D0094C84BB9BCDF4003F809DD29]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Feuil1' id='Feuil1_F67F0D0094C84BB9BCDF4003F809DD29'>
            <properties context=''>
              <relation connection='excel-direct.1gzpi871mf9fd51d5350s1pzpc14' name='Feuil1' table='[Feuil1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Feuil1 (Tableau Table 3)' inline='true' name='federated.1nflh2810glbtb10zqdk71y5h1wu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.143abn2027j4fb160e8jt0c5t06g'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Aigle Chauve/Documents/Professionnel/Software Engineering/Data Analysis/Tutoriels Tableau/Tableau-Project-Covid-Data/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.143abn2027j4fb160e8jt0c5t06g' name='Feuil1' table='[Feuil1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.143abn2027j4fb160e8jt0c5t06g' name='Feuil1' table='[Feuil1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_44ECA3F16BF6449F97A6A4136C109A63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_44ECA3F16BF6449F97A6A4136C109A63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_44ECA3F16BF6449F97A6A4136C109A63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_44ECA3F16BF6449F97A6A4136C109A63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Feuil1' datatype='table' name='[__tableau_internal_object_id__].[Feuil1_44ECA3F16BF6449F97A6A4136C109A63]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Feuil1' id='Feuil1_44ECA3F16BF6449F97A6A4136C109A63'>
            <properties context=''>
              <relation connection='excel-direct.143abn2027j4fb160e8jt0c5t06g' name='Feuil1' table='[Feuil1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Feuil1 (Tableau Table 4)' inline='true' name='federated.128l6wa0ur1i1z1edci3u02n9qoe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.0n3nnf016blqfk1gcot5u013ylam'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Aigle Chauve/Documents/Professionnel/Software Engineering/Data Analysis/Tutoriels Tableau/Tableau-Project-Covid-Data/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0n3nnf016blqfk1gcot5u013ylam' name='Feuil1' table='[Feuil1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0n3nnf016blqfk1gcot5u013ylam' name='Feuil1' table='[Feuil1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_BE5D3A0C58714DC3A0E3D46AAF07EC94]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_BE5D3A0C58714DC3A0E3D46AAF07EC94]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_BE5D3A0C58714DC3A0E3D46AAF07EC94]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_BE5D3A0C58714DC3A0E3D46AAF07EC94]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Feuil1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Feuil1_BE5D3A0C58714DC3A0E3D46AAF07EC94]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Feuil1' datatype='table' name='[__tableau_internal_object_id__].[Feuil1_BE5D3A0C58714DC3A0E3D46AAF07EC94]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;FR&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Réel&quot;</bucket>
            <bucket>&quot;Estimation&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Feuil1' id='Feuil1_BE5D3A0C58714DC3A0E3D46AAF07EC94'>
            <properties context=''>
              <relation connection='excel-direct.0n3nnf016blqfk1gcot5u013ylam' name='Feuil1' table='[Feuil1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Surligner 1 (généré)' name='[Action1_6AC82947971A48CE80344C30ED69D9F0]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Feuille 4' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Feuille 4' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Feuille 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Feuil1 (Tableau Table 1)' name='federated.1vnbk551ilol5616g5x1j082mx1k' />
          </datasources>
          <datasource-dependencies datasource='federated.1vnbk551ilol5616g5x1j082mx1k'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vnbk551ilol5616g5x1j082mx1k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vnbk551ilol5616g5x1j082mx1k].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vnbk551ilol5616g5x1j082mx1k].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vnbk551ilol5616g5x1j082mx1k].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1vnbk551ilol5616g5x1j082mx1k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1vnbk551ilol5616g5x1j082mx1k].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vnbk551ilol5616g5x1j082mx1k].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1vnbk551ilol5616g5x1j082mx1k].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vnbk551ilol5616g5x1j082mx1k].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
            <format attr='tick-color' value='#000000' />
            <format attr='tick-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vnbk551ilol5616g5x1j082mx1k].[:Measure Names]' value='132' />
            <format attr='height' value='52' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.1vnbk551ilol5616g5x1j082mx1k].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1vnbk551ilol5616g5x1j082mx1k].[Multiple Values]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#f0f3fa' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='cols' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1vnbk551ilol5616g5x1j082mx1k].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7911050319671631' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1vnbk551ilol5616g5x1j082mx1k].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A63D2447-7C89-4ABC-9228-D45054263C2C}' />
    </worksheet>
    <worksheet name='Feuille 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Count per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Feuil1 (Tableau Table 2)' name='federated.0bp7ymf0hywcdi12d01ti12k2do0' />
          </datasources>
          <datasource-dependencies datasource='federated.0bp7ymf0hywcdi12d01ti12k2do0'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bp7ymf0hywcdi12d01ti12k2do0].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bp7ymf0hywcdi12d01ti12k2do0].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bp7ymf0hywcdi12d01ti12k2do0].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='100000' max='1200000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0bp7ymf0hywcdi12d01ti12k2do0].[none:location:nk]' value='129' />
            <format attr='height' value='51' />
            <format attr='text-align' value='center' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0bp7ymf0hywcdi12d01ti12k2do0].[none:location:nk]' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0bp7ymf0hywcdi12d01ti12k2do0].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2083977460861206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bp7ymf0hywcdi12d01ti12k2do0].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0bp7ymf0hywcdi12d01ti12k2do0].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{A118BC58-9675-4645-8A77-4426D98CA8ED}' />
    </worksheet>
    <worksheet name='Feuille 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of People Infested per Country
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Feuil1 (Tableau Table 3)' name='federated.1nflh2810glbtb10zqdk71y5h1wu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1nflh2810glbtb10zqdk71y5h1wu'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1nflh2810glbtb10zqdk71y5h1wu].[Longitude (generated)]' field-type='quantitative' max='13636537.763612399' min='-21471821.450812221' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1nflh2810glbtb10zqdk71y5h1wu].[Latitude (generated)]' field-type='quantitative' max='13230273.405169835' min='-6772423.7679330492' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1nflh2810glbtb10zqdk71y5h1wu].[sum:PercentPopulationInfected:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1nflh2810glbtb10zqdk71y5h1wu].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1nflh2810glbtb10zqdk71y5h1wu].[none:Location:nk]' />
              <color column='[federated.1nflh2810glbtb10zqdk71y5h1wu].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1nflh2810glbtb10zqdk71y5h1wu].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nflh2810glbtb10zqdk71y5h1wu].[Latitude (generated)]</rows>
        <cols>[federated.1nflh2810glbtb10zqdk71y5h1wu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6DC0AE63-3B5E-4E62-8ED6-4EE88E496543}' />
    </worksheet>
    <worksheet name='Feuille 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of People Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Feuil1 (Tableau Table 4)' name='federated.128l6wa0ur1i1z1edci3u02n9qoe' />
          </datasources>
          <datasource-dependencies datasource='federated.128l6wa0ur1i1z1edci3u02n9qoe'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.128l6wa0ur1i1z1edci3u02n9qoe].[tmn:date:qk]' scope='cols' value='Mois' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Location:nk]' />
              <text column='[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Location:nk]' />
              <color column='[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Forecast Indicator:nk]' />
              <text column='[federated.128l6wa0ur1i1z1edci3u02n9qoe].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.128l6wa0ur1i1z1edci3u02n9qoe].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.128l6wa0ur1i1z1edci3u02n9qoe].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{0C5CE1D2-98FA-4B6D-AFFC-D931D0C695B8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Tableau de bord 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='10' name='Feuille 3' w='41900' x='42500' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='12' name='Feuille 4' w='56700' x='42500' y='50000'>
            <layout-cache minheight='254' minwidth='152' type-h='scalable' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='8250' id='11' name='Feuille 3' pane-specification-id='3' param='[federated.1nflh2810glbtb10zqdk71y5h1wu].[sum:PercentPopulationInfected:qk]' type-v2='color' w='14800' x='84400' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='40750' id='13' name='Feuille 4' pane-specification-id='0' param='[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Location:nk]&#10;[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Forecast Indicator:nk]' type-v2='color' w='14800' x='84400' y='9250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24500' id='3' name='Feuille 1' w='41700' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='73500' id='5' name='Feuille 2' w='41700' x='800' y='25500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='188' h='24500' id='3' is-fixed='true' name='Feuille 1' w='41700' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Feuille 3' w='41900' x='42500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='11' name='Feuille 3' pane-specification-id='3' param='[federated.1nflh2810glbtb10zqdk71y5h1wu].[sum:PercentPopulationInfected:qk]' type-v2='color' w='14800' x='84400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73500' id='5' is-fixed='true' name='Feuille 2' w='41700' x='800' y='25500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Feuille 4' w='56700' x='42500' y='50000'>
                  <layout-cache minheight='254' minwidth='152' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='40750' id='13' name='Feuille 4' pane-specification-id='0' param='[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Location:nk]&#10;[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Forecast Indicator:nk]' type-v2='color' w='14800' x='84400' y='9250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0F7B1D4A-CBCF-4E99-9385-02D6CCA1D283}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Feuille 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vnbk551ilol5616g5x1j082mx1k].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89748D10-CA23-4CAF-95A4-ACE7C9342FAF}' />
    </window>
    <window class='worksheet' name='Feuille 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0bp7ymf0hywcdi12d01ti12k2do0].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bp7ymf0hywcdi12d01ti12k2do0].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BB84725-A3C8-4D16-AA1B-479A6A99851A}' />
    </window>
    <window class='worksheet' name='Feuille 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='3' param='[federated.1nflh2810glbtb10zqdk71y5h1wu].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nflh2810glbtb10zqdk71y5h1wu].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D44D9794-E10C-44B7-B620-0FF5758000F4}' />
    </window>
    <window class='worksheet' name='Feuille 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Location:nk]&#10;[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Forecast Indicator:nk]</field>
            <field>[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Location:nk]</field>
            <field>[federated.128l6wa0ur1i1z1edci3u02n9qoe].[yr:date:ok]</field>
            <field>[federated.1nflh2810glbtb10zqdk71y5h1wu].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5ABA00C5-3186-4C9E-B04E-74D42F5CF072}' />
    </window>
    <window class='dashboard' maximized='true' name='Tableau de bord 1'>
      <viewpoints>
        <viewpoint name='Feuille 1' />
        <viewpoint name='Feuille 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.0bp7ymf0hywcdi12d01ti12k2do0].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Feuille 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Feuille 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Forecast Indicator:nk]</field>
              <field>[federated.128l6wa0ur1i1z1edci3u02n9qoe].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{41B34CD1-DDFA-49A2-B1FE-9C0C74FE5A58}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='76' name='Feuille 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Feuille 3' width='192'>
      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
      HOQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Feuille 4' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tableau de bord 1' width='192'>
      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
      o5ieP1yKAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
